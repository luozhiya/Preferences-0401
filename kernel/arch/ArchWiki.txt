Archlinux+7950x编译机器
-----------------------
* 学习、代码
* 写好日志，txt格式
* 买硬件装机
* 装系统、配置系统
* 编译环境

日志
====

装机
====
* 主板接触铜柱面有磨损，但大部分在圆圈内，所以问题应该不大，而且系统也没有什么问题
* FC140确实不静音，换一个也还是这个样子
* 显示15代码，第二个灯亮，客服说是内存问题，果然的是，按最小配置启动，只查一根测试
* 400-620-6655，拨通后按1再按2转人工，24小时服务

配置系统
========

Vim
---
如果需要clipboard则要安装gvim，默认vim时mininal，最小化的，啥都没有

Font
----
sudo pacman -S wqy-microhei wqy-zenhei
sudo pacman -S noto-fonts
sudo pacman -S noto-fonts-cjk noto-fonts-emoji

输入法
------
sudo pacman -S which
sudo pacman -S fcitx5-im
sudo pacman -S fcitx5-rime

logout
------
sudo pacman -S xsecurelock

浏览器
------
sudo pacman -S firefox
sudo pacman -S chromium
sudo pacman -S firefox-developer-edition

显示器耳机
----------
sudo pacman -S pulseaudio
sudo pacman -S xfce4-pulseaudio-plugin
sudo pacman -S pulseaudio-alsa
sudo pacman -S pavucontrol
在Volume Control中，输出Port选择 HDMI/DisplayPort即可

挂载nvme
--------
注意blkid这个只能读取已经分区的盘

挂载机械硬盘
------------
这里有一个linux的优点，不挂载时，机械硬盘基本不动，没有什么声音

Trim支持
--------
sudo lsblk --discard
sudo pacman -S hdparm
sudo hdparm -I /dev/sda | grep TRIM
sudo hdparm -I /dev/sdb | grep TRIM

性能监控
--------
sudo pacman -S htop
sudo pacman -S iotop
sudo pacman -S btop
sudo pacman -S xfce4-taskmanager
总而言之，btop一览无余、符合Win操作体系的用xfce-taskmanager

PCIE设备
-------
sudo lspci -tv

USB设备
-------
sudo pacman -S usbutils
sudo lsusb -t
sudo pacman -S udisks2
通过udiskctl可以很容易挂载U盘
udisksctl mount -b /dev/sdc1
udisksctl unmount -b /dev/sdc1

BAR
---
sudo dmesg | grep BAR=

温度监控
--------
sudo pacman -S lm_sensors
sudo sensors-detect
sensors

Xfce插件
--------
sudo pacman -S xfce4-sensors-plugin
sudo pacman -S xfce4-cpufreq-plugin
sudo pacman -S xfce4-battery-plugin
sudo pacman -S xfce4-cpugraph-plugin
sudo pacman -S xfce4-diskperf-plugin
sudo pacman -S xfce4-netload-plugin
sudo pacman -S xfce4-systemload-plugin

显卡
----
lspci -k | grep -A 3 -E "(VGA|3D)"

xrandr
------
sudo pacman -S xorg-xrandr

修改内核参数
------------
vim /etc/default/grub 
grub-mkconfig -o /boot/grub/grub.cfg

系统日志
--------
-b选项仅显示上次引导后的消息
journalctl -b
journalctl --no-pager
即可存储到文件
journalctl -b --no-pager -o json-pretty > 23-03-30-23-flash-screen.json.bug.txt
dmesg

存储管理常用命令
----------------
free -h			查看swap和内存
lsblk			查看设备UUID
dh -h			查看分区挂载和占用情况
gdisk /dev/name		xzyy清空GPT和MBR
cgdisk /dev/name	分区
mkfs.ext /dev/name	格式化
lsblk --fs /dev/name	查看分区格式 

用户和组管理
------------
sudo groupmems -g wheel -l	查看wheel组下面的成员
id	查看当前用户id信息
uid=1000(yanchcore) gid=1000(yanchcore) groups=1000(yanchcore),998(wheel)=
groups	查看当前用户所属组
wheel yanchcore
https://www.redhat.com/sysadmin/linux-groups

Q: 
0. xfce4-power-mange plugin 没有显示器亮度
1. 而且Display 那一页里的Display power management不能开启，否则会不停的出现显示器重连提示
2. /sys/class/backlight 里没有任何amdgpu_bl0、acpi_video0这样的文件夹
------------------------------------------
I: 7950x的集成显卡为 RDNA 2 架构

T: 
a. 尝试通过修改内核参数
acpi_backlight=vendor
b. 这个问题可能和内核有关，毕竟7950X是新CPU。
然后还有可能关联的模块：电源管理、显卡驱动、显示器连接、xfce 桌面环境、plugin本身
c. 和BIOS IOMMU也没有什么关系

S:
a. 
xrandr --output HDMI-1 --brightness 2
可以用xrandr来修改亮度

R:
https://wiki.archlinux.org/title/AMDGPU
https://wiki.archlinux.org/title/Backlight
https://wiki.archlinux.org/title/Xrandr
https://wiki.archlinux.org/title/Kernel_parameters
https://wiki.archlinux.org/title/Power_management

Grub
----
GRUB_CMDLINE_LINUX		both normal and recovery modes
GRUB_CMDLINE_LINUX_DEFAULT	normal mode only


编译环境
========
查看资源 btop
写日志 	 gvim

Mount ext4
----------
ext4 是不没有uid gid这样的，这些是给ntfs用的
mount /dev/nvme1n1p1 /home/yanchcore/Code
然后再修改Code的文件夹权限即可
试错过程
ls -al | grep Code
drwxr-xr-x  3 root      root       4096 Mar 14 22:47 Code
sudo chown -R yanchcore Code
ls -al | grep Code
drwxr-xr-x  3 yanchcore root       4096 Mar 14 22:47 Code
sudo chown -R yanchcore:yanchcore /home/yanchcore/Code
ls -al | grep Code
drwxrwxr-x  3 yanchcore yanchcore  4096 Mar 14 22:47 Code
https://superuser.com/questions/932676/cannot-set-uid-with-mount
https://man.archlinux.org/man/mount.8
https://wiki.archlinux.org/title/File_systems
https://blog.csdn.net/alxe_made/article/details/80763339
https://blog.csdn.net/dl6655/article/details/75045105

Compile Neovim
--------------
git clone https://github.com/neovim/neovim
export http_proxy="http://127.0.0.1:38457"
export https_proxy="http://127.0.0.1:38457"
make CMAKE_BUILD_TYPE=RelWithDebInfo
sudo make install
题外话：7950X太厉害了，编译neovim用了不到两秒。。

Building Neovide
----------------
git clone https://github.com/neovide/neovide.git
curl --proto '=https' --tlsv1.3 -sSf "https://sh.rustup.rs" | sh
等待下载完成
按2自定义配置成nightly
   default host triple: x86_64-unknown-linux-gnu
     default toolchain: nightly
               profile: default
  modify PATH variable: yes
按回车安装
配置中国镜像
http://rsproxy.cn/
编译过程需要下载skia源码，即使修改了Cargo.toml也不行

Font
----
Terminal里的monospace很不错，是什么字体，可以通过下面
这个命令查看具体的字体文件
fc-match monospace
NotoSansMono-Regular.ttf: "Noto Sans Mono" "Regular"

Neovim
------
https://github.com/hrsh7th/nvim-cmp/issues/373
https://vonheikemen.github.io/devlog/tools/setup-nvim-lspconfig-plus-nvim-cmp/
https://dev.to/ntncahay/neovim-lsp-setup-code-completion-engine-3ckm
https://vi.stackexchange.com/questions/36890/how-to-set-keywordprg-to-call-a-lua-function-in-neovim
https://stackoverflow.com/questions/843823/how-do-you-use-the-k-button-in-the-normal-mode-of-vim
http://neovim.io/doc/user/options.html#'keywordprg'
https://tkg.codes/guide-to-modern-neovim-setup-2021/

nvim-tree
https://github.com/nvim-tree/nvim-tree.lua/issues/1483
https://github.com/nvim-tree/nvim-tree.lua/issues/1441
https://github.com/nvim-tree/nvim-tree.lua/issues/1294
https://github.com/nvim-tree/nvim-tree.lua/issues/853

clangd
https://github.com/neovim/nvim-lspconfig/blob/master/lua/lspconfig/server_configurations/clangd.lua
https://sr.ht/~p00f/clangd_extensions.nvim/

lsp bug
install clangd > open C++ file -> install new plugin
Error executing vim.schedule lua callback: /usr/local/share/nvim/runtime/lua/vim/lsp.lua:1112: Vim:E86: Buffer 2
 does not exist
stack traceback:
        [C]: in function 'buffer'
        /usr/local/share/nvim/runtime/lua/vim/lsp.lua:1112: in function 'is_empty_or_default'
        /usr/local/share/nvim/runtime/lua/vim/lsp.lua:1127: in function 'set_defaults'
        /usr/local/share/nvim/runtime/lua/vim/lsp.lua:1534: in function '_on_attach'
        /usr/local/share/nvim/runtime/lua/vim/lsp.lua:1363: in function ''
        vim/_editor.lua: in function <vim/_editor.lua:0>


Terminal
--------
~/.config/xfce4/terminal/accels.scm

System Dump
-----------
运行过程中突然xfce崩溃了，这个时候查看系统信息
崩溃转储文件位置
/var/lib/systemd/coredump
查看所有的崩溃日志
journalctl -b
Mar 18 23:21:04 R9-7950X-CODE kernel: traps: xfce4-session[800] general protection fault ip:5600532e2919 sp:7ffcf5855110 error:0 in xfce4-session[5600532cd000+1a000]
Mar 18 23:21:04 R9-7950X-CODE systemd[1]: Created slice Slice /system/systemd-coredump.
Mar 18 23:21:04 R9-7950X-CODE systemd[1]: Started Process Core Dump (PID 3210/UID 0).
Mar 18 23:21:04 R9-7950X-CODE systemd-coredump[3211]: Process 800 (xfce4-session) of user 1000 dumped core.
大致可以看到是xfce4-session崩溃了，
                                                      Stack trace of thread 800:
                                                      #0  0x00005600532e2919 n/a (xfce4-session + 0x27919)
                                                      #1  0x00007f6a2777cf68 n/a (libgio-2.0.so.0 + 0xfef68)
                                                      #2  0x00007f6a2752cafb g_main_context_dispatch (libglib-2.0.so.0 + 0x5aafb)
                                                      #3  0x00007f6a275895d9 n/a (libglib-2.0.so.0 + 0xb75d9)
                                                      #4  0x00007f6a2752c0cf g_main_loop_run (libglib-2.0.so.0 + 0x5a0cf)
                                                      #5  0x00007f6a27bd8e4f gtk_main (libgtk-3.so.0 + 0x1d8e4f)
                                                      #6  0x00005600532cd188 main (xfce4-session + 0x12188)
                                                      #7  0x00007f6a2730c790 n/a (libc.so.6 + 0x23790)
                                                      #8  0x00007f6a2730c84a __libc_start_main (libc.so.6 + 0x2384a)
                                                      #9  0x00005600532cd3f5 _start (xfce4-session + 0x123f5)
                                                      
                                                      Stack trace of thread 813:
                                                      #0  0x00007f6a2736b766 n/a (libc.so.6 + 0x82766)
                                                      #1  0x00007f6a2736df90 pthread_cond_wait (libc.so.6 + 0x84f90)
                                                      #2  0x00007f6a2170c4ee n/a (radeonsi_dri.so + 0x10c4ee)
                                                      #3  0x00007f6a216bc8bc n/a (radeonsi_dri.so + 0xbc8bc)
                                                      #4  0x00007f6a2170c41c n/a (radeonsi_dri.so + 0x10c41c)
                                                      #5  0x00007f6a2736ebb5 n/a (libc.so.6 + 0x85bb5)
                                                      #6  0x00007f6a273f0d90 n/a (libc.so.6 + 0x107d90)
                                                      
                                                      Stack trace of thread 812:
                                                      #0  0x00007f6a2736b766 n/a (libc.so.6 + 0x82766)
                                                      #1  0x00007f6a2736df90 pthread_cond_wait (libc.so.6 + 0x84f90)
                                                      #2  0x00007f6a2170c4ee n/a (radeonsi_dri.so + 0x10c4ee)
                                                      #3  0x00007f6a216bc8bc n/a (radeonsi_dri.so + 0xbc8bc)
                                                      #4  0x00007f6a2170c41c n/a (radeonsi_dri.so + 0x10c41c)
                                                      #5  0x00007f6a2736ebb5 n/a (libc.so.6 + 0x85bb5)
                                                      #6  0x00007f6a273f0d90 n/a (libc.so.6 + 0x107d90)
                                                      
                                                      Stack trace of thread 823:
                                                      #0  0x00007f6a273e39df __poll (libc.so.6 + 0xfa9df)
                                                      #1  0x00007f6a2758953f n/a (libglib-2.0.so.0 + 0xb753f)
                                                      #2  0x00007f6a2752a382 g_main_context_iteration (libglib-2.0.so.0 + 0x58382)
                                                      #3  0x00007f6a2752a3d2 n/a (libglib-2.0.so.0 + 0x583d2)
                                                      #4  0x00007f6a2755a7c5 n/a (libglib-2.0.so.0 + 0x887c5)
                                                      #5  0x00007f6a2736ebb5 n/a (libc.so.6 + 0x85bb5)
                                                      #6  0x00007f6a273f0d90 n/a (libc.so.6 + 0x107d90)
                                                      
                                                      Stack trace of thread 810:
                                                      #0  0x00007f6a2736b766 n/a (libc.so.6 + 0x82766)
                                                      #1  0x00007f6a2736df90 pthread_cond_wait (libc.so.6 + 0x84f90)
                                                      #2  0x00007f6a2170c4ee n/a (radeonsi_dri.so + 0x10c4ee)
                                                      #3  0x00007f6a216bc8bc n/a (radeonsi_dri.so + 0xbc8bc)
                                                      #4  0x00007f6a2170c41c n/a (radeonsi_dri.so + 0x10c41c)
                                                      #5  0x00007f6a2736ebb5 n/a (libc.so.6 + 0x85bb5)
                                                      #6  0x00007f6a273f0d90 n/a (libc.so.6 + 0x107d90)
                                                      
                                                      Stack trace of thread 822:
                                                      #0  0x00007f6a273e90dd syscall (libc.so.6 + 0x1000dd)
                                                      #1  0x00007f6a2757da35 g_cond_wait (libglib-2.0.so.0 + 0xaba35)
                                                      #2  0x00007f6a274f6fc4 n/a (libglib-2.0.so.0 + 0x24fc4)
                                                      #3  0x00007f6a2755c43e n/a (libglib-2.0.so.0 + 0x8a43e)
                                                      #4  0x00007f6a2755a7c5 n/a (libglib-2.0.so.0 + 0x887c5)
                                                      #5  0x00007f6a2736ebb5 n/a (libc.so.6 + 0x85bb5)
                                                      #6  0x00007f6a273f0d90 n/a (libc.so.6 + 0x107d90)
                                                      
                                                      Stack trace of thread 811:
                                                      #0  0x00007f6a2736b766 n/a (libc.so.6 + 0x82766)
                                                      #1  0x00007f6a2736df90 pthread_cond_wait (libc.so.6 + 0x84f90)
                                                      #2  0x00007f6a2170c4ee n/a (radeonsi_dri.so + 0x10c4ee)
                                                      #3  0x00007f6a216bc8bc n/a (radeonsi_dri.so + 0xbc8bc)
                                                      #4  0x00007f6a2170c41c n/a (radeonsi_dri.so + 0x10c41c)
                                                      #5  0x00007f6a2736ebb5 n/a (libc.so.6 + 0x85bb5)
                                                      #6  0x00007f6a273f0d90 n/a (libc.so.6 + 0x107d90)
                                                      
                                                      Stack trace of thread 824:
                                                      #0  0x00007f6a273e39df __poll (libc.so.6 + 0xfa9df)
                                                      #1  0x00007f6a2758953f n/a (libglib-2.0.so.0 + 0xb753f)
                                                      #2  0x00007f6a2752c0cf g_main_loop_run (libglib-2.0.so.0 + 0x5a0cf)
                                                      #3  0x00007f6a2778de4c n/a (libgio-2.0.so.0 + 0x10fe4c)
                                                      #4  0x00007f6a2755a7c5 n/a (libglib-2.0.so.0 + 0x887c5)
                                                      #5  0x00007f6a2736ebb5 n/a (libc.so.6 + 0x85bb5)
                                                      #6  0x00007f6a273f0d90 n/a (libc.so.6 + 0x107d90)
                                                      ELF object binary architecture: AMD x86-64
Mar 18 23:21:04 R9-7950X-CODE systemd[1]: systemd-coredump@0-3210-0.service: Deactivated successfully.
Mar 18 23:21:04 R9-7950X-CODE pulseaudio[870]: ICE I/O error handler called
Mar 18 23:21:04 R9-7950X-CODE polkitd[834]: Unregistered Authentication Agent for unix-session:1 (system bus name :1.14, object path /org/gnome/PolicyKit1/AuthenticationAgent, locale en_US.UTF-8) (disconnected from bus)
Mar 18 23:21:04 R9-7950X-CODE at-spi-bus-launcher[833]: X connection to :0 broken (explicit kill or server shutdown).
从这个栈帧情况来看，有可能是驱动的问题。也有可能是有应用程序不兼容驱动
分析用过的程序，sublime merge是每次触发崩溃都有的，所以这个问题很大
暂时换成lazygit和gitui好了

Refs:
https://man.archlinux.org/man/systemd-coredump.8.en

ls
--
查看大小，以M为单位
ls -l --block-size=M

PATH
----
export PATH="$ {PATH}:/home/my_user/bin

FastGithub
----------
cd /etc/ca-certificates/trust-source/anchors
sudo cp /home/yanchcore/Omega/App/fastgithub_linux-x64/cacert/fastgithub.crt .
sudo update-ca-trust
https://wiki.archlinux.org/title/User:Grawity/Adding_a_trusted_CA_certificate

Python mirror
-------------
sudo pacman -S python-pip
1.
pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package
2.
python -m pip install --upgrade pip
pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
https://mirrors.tuna.tsinghua.edu.cn/help/pypi/

aria2c
------
aria2c --all-proxy='http://127.0.0.1:38457'  https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/Noto.zip

xfce4-mime-settings
-----------
xfce4-mime-helper
https://www.addictivetips.com/ubuntu-linux-tips/set-program-defaults-in-xfce/
/home/yanchcore/.config/mimeapps.list

Chromium
--------
打开视频总是提示要打开xdg-open
https://www.chromium.org/administrators/linux-quick-start/
https://superuser.com/questions/1481851/disable-chrome-to-ask-for-confirmation-to-open-external-application-everytime/1588146#1588146
改这些地方毫无用处，垃圾Chormium
Policy
/etc/opt/chrome/policies/managed
Preferences
/home/yanchcore/.config/chromium/Default/Preferences

mount
-----
Device         Start        End    Sectors  Size Type
/dev/nvme3n1p1  2048 4000796671 4000794624  1.9T Linux filesystem
[yanchcore@R9-7950X-CODE ~]$ lsblk
NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda           8:0    0  7.3T  0 disk 
└─sda1        8:1    0  7.3T  0 part 
sdb           8:16   0  7.3T  0 disk 
└─sdb1        8:17   0  7.3T  0 part 
nvme2n1     259:0    0  1.9T  0 disk 
└─nvme2n1p1 259:1    0  1.9T  0 part 
nvme1n1     259:2    0  1.9T  0 disk 
├─nvme1n1p1 259:3    0  100M  0 part 
├─nvme1n1p2 259:4    0   10G  0 part /boot
├─nvme1n1p3 259:5    0  256G  0 part [SWAP]
└─nvme1n1p4 259:6    0  1.6T  0 part /
nvme0n1     259:7    0  1.9T  0 disk 
└─nvme0n1p1 259:9    0  1.9T  0 part 
nvme4n1     259:8    0  1.9T  0 disk 
└─nvme4n1p1 259:10   0  1.9T  0 part 
nvme3n1     259:11   0  1.9T  0 disk 
└─nvme3n1p1 259:12   0  1.9T  0 part /home
[yanchcore@R9-7950X-CODE ~]$ sudo mount /dev/nvme1n1p1 /home/yanchcore/Code
mount: /home/yanchcore/Code: wrong fs type, bad option, bad superblock on /dev/nvme1n1p1, missing codepage or helper program, or other error.
       dmesg(1) may have more information after failed mount system call.
[yanchcore@R9-7950X-CODE ~]$ sudo mount /dev/nvme0n1p1 /home/yanchcore/Code
BIOS更新会导致磁盘的内部序号变化，因此mount盘符会发生错误
原本系统的0变成了1，原本的1变成0
也就是说现在PCIE上的卡才是第一个0
